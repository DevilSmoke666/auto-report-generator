# /workspaces/auto-report-generator/app/run_app.py 
# –ê–±–æ —è–∫—â–æ —Ü–µ–π —Ñ–∞–π–ª —É –∫–æ—Ä–µ–Ω—ñ –ø—Ä–æ–µ–∫—Ç—É, —Ç–æ —à–ª—è—Ö–∏ –¥–æ .tmp —Ç—Ä–µ–±–∞ –±—É–¥–µ —Å–∫–æ—Ä–∏–≥—É–≤–∞—Ç–∏

import streamlit as st
from dotenv import load_dotenv # ‚úÖ –ó–∞–ª–∏—à–∞—î–º–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏
import os
import json # –ú–æ–∂–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—è –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ JSON, —è–∫—â–æ –±—É–¥–µ—Ç–µ –π–æ–≥–æ –ø–∞—Ä—Å–∏—Ç–∏

# --- –ü–û–ß–ê–¢–û–ö –ë–õ–û–ö–£ –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á ---

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ .env —Ñ–∞–π–ª—É (—è–∫—â–æ –≤—ñ–Ω —î)
# –¶–µ –º–∞—î –±—É—Ç–∏ –æ–¥–∏–Ω –∑ –ø–µ—Ä—à–∏—Ö —Ä—è–¥–∫—ñ–≤ —É –≤–∞—à–æ–º—É –≥–æ–ª–æ–≤–Ω–æ–º—É —Å–∫—Ä–∏–ø—Ç—ñ
load_dotenv() 
print("INFO: Attempted to load .env file.")

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è Google Cloud Credentials (–∑ GitHub Secret -> env var -> temp file)
print("INFO: Attempting to set up Google Cloud credentials...")
gcp_creds_json_string = os.environ.get('GOOGLE_CREDENTIALS_JSON')

if gcp_creds_json_string:
    try:
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ —à–ª—è—Ö –¥–æ –∫–æ—Ä–µ–Ω—è –ø—Ä–æ–µ–∫—Ç—É, —â–æ–± –ø–∞–ø–∫–∞ .tmp –±—É–ª–∞ —Ç–∞–º
        # –Ø–∫—â–æ run_app.py –≤ –ø–∞–ø—Ü—ñ app/, —Ç–æ –∫–æ—Ä—ñ–Ω—å –ø—Ä–æ–µ–∫—Ç—É –Ω–∞ –æ–¥–∏–Ω —Ä—ñ–≤–µ–Ω—å –≤–∏—â–µ
        project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
        temp_dir = os.path.join(project_root, ".tmp") 
        
        if not os.path.exists(temp_dir):
            os.makedirs(temp_dir)
            print(f"INFO: Created directory: {temp_dir}")
        
        temp_creds_file_path = os.path.join(temp_dir, "gcp_service_account.json")

        with open(temp_creds_file_path, 'w') as temp_file:
            temp_file.write(gcp_creds_json_string)
        
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞, —è–∫—É —à—É–∫–∞—é—Ç—å –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ Google
        os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = temp_creds_file_path 
        print(f"SUCCESS: GOOGLE_APPLICATION_CREDENTIALS set to temporary file: {temp_creds_file_path}")
    except Exception as e:
        print(f"ERROR: Failed to set up GCP credentials from env var: {e}")
        # –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ st.error() —è–∫—â–æ —Ü–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –∑–∞–ø—É—Å–∫—É streamlit, –∞–ª–µ print –∫—Ä–∞—â–µ –¥–ª—è –ª–æ–≥—ñ–≤
else:
    print("WARNING: GCP_CREDENTIALS_JSON_CONTENT environment variable for Google Cloud not found.")
    print("         Google Sheets functionality might be affected if not configured otherwise.")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—à–∏—Ö –≤–∞–∂–ª–∏–≤–∏—Ö —Å–µ–∫—Ä–µ—Ç—ñ–≤ (–ø—Ä–æ—Å—Ç–æ –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è, —Å–∞–º –∫–æ–¥ —ó—Ö –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –Ω–∞–ø—Ä—è–º—É)
if not os.environ.get('GEMINI_API_KEY'):
    print("WARNING: GEMINI_API_KEY environment variable not found.")
if not os.environ.get('EMAIL_USER'): # –ü—Ä–∏–∫–ª–∞–¥
    print("WARNING: EMAIL_USER environment variable not found.")

# --- –ö–Ü–ù–ï–¶–¨ –ë–õ–û–ö–£ –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á ---


# –Ü–º–ø–æ—Ä—Ç –≤–∞—à–æ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è –ü–Ü–°–õ–Ø —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞, 
# –æ—Å–æ–±–ª–∏–≤–æ —è–∫—â–æ –≤—ñ–Ω –æ–¥—Ä–∞–∑—É –Ω–∞–º–∞–≥–∞—î—Ç—å—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∏ —Å–µ—Ä–≤—ñ—Å—ñ–≤
from app.report_generator import generate_and_send_report  # ‚úÖ –ê–±—Å–æ–ª—é—Ç–Ω–∏–π —ñ–º–ø–æ—Ä—Ç

def main():
    st.set_page_config(page_title="AUTO-REPORT-GENERATOR", layout="centered")
    st.title("üìã AUTO-REPORT-GENERATOR")
    st.markdown("–ó–≥–µ–Ω–µ—Ä—É–π—Ç–µ –∑–≤—ñ—Ç üßæ —ñ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –π–æ–≥–æ –Ω–∞ email üì©")

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Å—ñ—ó –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É
    if 'sheet_id_input' not in st.session_state:
        st.session_state.sheet_id_input = ""
    if 'email_input' not in st.session_state:
        st.session_state.email_input = ""
    if 'csv_file_uploader_key' not in st.session_state:
        st.session_state.csv_file_uploader_key = 0 # –î–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É file_uploader

    data_source = st.radio(
        "–û–±–µ—Ä—ñ—Ç—å –¥–∂–µ—Ä–µ–ª–æ –¥–∞–Ω–∏—Ö:", 
        ["Google Sheet ID", "CSV —Ñ–∞–π–ª"], 
        key="data_source_radio"
    )
    
    sheet_id = None
    csv_file = None

    if data_source == "Google Sheet ID":
        st.session_state.sheet_id_input = st.text_input(
            "–í–≤–µ–¥—ñ—Ç—å Google Sheet ID:", 
            value=st.session_state.sheet_id_input, 
            key="sheet_id_text_input"
        )
        sheet_id = st.session_state.sheet_id_input
        # –°–∫–∏–¥–∞—î–º–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—á —Ñ–∞–π–ª—ñ–≤, —è–∫—â–æ –æ–±—Ä–∞–Ω–æ Google Sheet
        if st.session_state.get('csv_file_state') is not None:
             st.session_state.csv_file_uploader_key +=1 
             st.session_state.csv_file_state = None

    else: # data_source == "CSV —Ñ–∞–π–ª"
        csv_file_obj = st.file_uploader(
            "–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ CSV —Ñ–∞–π–ª", 
            type=["csv"], 
            key=f"file_uploader_{st.session_state.csv_file_uploader_key}" # –î–∏–Ω–∞–º—ñ—á–Ω–∏–π –∫–ª—é—á –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è
        )
        if csv_file_obj is not None:
            csv_file = csv_file_obj # –ü–µ—Ä–µ–¥–∞—î–º–æ –æ–±'—î–∫—Ç —Ñ–∞–π–ª—É
            st.session_state.csv_file_state = csv_file_obj # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω
        # –°–∫–∏–¥–∞—î–º–æ sheet_id, —è–∫—â–æ –æ–±—Ä–∞–Ω–æ CSV
        st.session_state.sheet_id_input = ""


    st.session_state.email_input = st.text_input(
        "–í–≤–µ–¥—ñ—Ç—å email –∫–ª—ñ—î–Ω—Ç–∞:", 
        value=st.session_state.email_input,
        key="email_text_input"
    )
    email = st.session_state.email_input

    if st.button("üöÄ –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–≤—ñ—Ç"):
        if not email:
            st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å email")
        elif data_source == "Google Sheet ID" and not sheet_id:
            st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å Google Sheet ID")
        elif data_source == "CSV —Ñ–∞–π–ª" and not csv_file: # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –æ–±'—î–∫—Ç —Ñ–∞–π–ª—É
            st.warning("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ CSV —Ñ–∞–π–ª")
        else:
            with st.spinner("–ì–µ–Ω–µ—Ä—É—î–º–æ –∑–≤—ñ—Ç... –¶–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ –¥–µ—è–∫–∏–π —á–∞—Å. ‚è≥"):
                try:
                    # –ü–µ—Ä–µ–¥–∞—î–º–æ –∞–±–æ sheet_id, –∞–±–æ –æ–±'—î–∫—Ç csv_file
                    generate_and_send_report(email=email, sheet_id=sheet_id, csv_file=csv_file)
                    st.success(f"‚úÖ –ó–≤—ñ—Ç —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ {email}")
                    # –û—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
                    st.session_state.sheet_id_input = ""
                    st.session_state.email_input = ""
                    st.session_state.csv_file_uploader_key += 1 # –ó–º—ñ–Ω—é—î–º–æ –∫–ª—é—á –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è file_uploader
                    st.session_state.csv_file_state = None
                    st.experimental_rerun() # –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É

                except Exception as e:
                    st.error(f"‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∞–±–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –∑–≤—ñ—Ç—É: {e}")
                    # –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ –¥–ª—è —Å–µ–±–µ
                    print(f"ERROR in generate_and_send_report: {e}") 
                    import traceback
                    traceback.print_exc()


if __name__ == "__main__":
    # –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –ª–æ–≥—ñ–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–ª—é—á—ñ–≤ GCP –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –¥–æ main()
    # –£ —Ü—å–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ –≤–æ–Ω–∞ –≤–∂–µ –Ω–∞ –ø–æ—á–∞—Ç–∫—É —Ñ–∞–π–ª—É, —Ç–æ–º—É —Ü–µ –±—É–¥–µ –∑—Ä–æ–±–ª–µ–Ω–æ –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ/–∑–∞–ø—É—Å–∫—É
    main()